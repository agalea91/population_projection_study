In 1950 there were about 2.5 billion people on earth.  Now there are nearly <em>three</em> times as many.  The world population is expected to continue increasing and <a href="https://en.wikipedia.org/wiki/World_population_estimates#Projections" target="_blank">it's projected</a> that by the year 2050 there will be over 9 billion humans wandering around this planet.

One can ask the question: in which countries is this growth is expected to occur?  I'll investigate this by illustrating data from <a href="https://en.wikipedia.org/wiki/List_of_countries_by_past_and_future_population" target="_blank">a Wikipedia article </a>that lists the population of every country from the years 1950 to 2015 along with projections up 2050.  The data had been made public by the United States Census Bureau.

Below is a plot of the countries that are expected to increase the most over the next 35 years.  They are listed in order of largest increase, with India (projecting growth of 400 million) at the top.

<img class=" size-full wp-image-94 aligncenter" src="https://galeascience.files.wordpress.com/2016/02/large_projected_growth1.png" alt="large_projected_growth" width="1718" height="1309" />

The vertical dotted line marks current populations (as of 2015).  To its right, as can be seen, the predictions are strongly influenced by the rate of change of pre-2015 data.  Error bands have been included to give some idea as to the deviations that could occur.  These are calculated using the exponential formulas
<p align="center">$latex \text{err}_\text{upper}=\text{pop} (i) \cdot 1.01^{i},$</p>
and
<p align="center">$latex \text{err}_\text{lower}=\text{pop} (i) \cdot 0.99^{i},$</p>
where $latex i=0$ corresponds to 2015, $latex i=1$ to 2020, etc.; these result in error bounds that increase by about 2% every 5 years (and mimic <a href="https://commons.wikimedia.org/wiki/File:World_population_(UN).svg" target="_blank">this Wiki-figure</a>).

We can also look at the countries whose population is expected to <em>decrease</em> by the most.  Out of the 227 included in the above mentioned Wikipedia article, a reduction in population between the years 2015 and 2050 is expected for about 25% of them.  The bottom 9 are plotted in the figure below and ordered in the legend by largest projected decrease.  It was surprising to see that China, the first country to have 1 billion people, is atop this list.

<img class=" size-full wp-image-93 aligncenter" src="https://galeascience.files.wordpress.com/2016/02/large_projected_decline1.png" alt="large_projected_decline" width="1716" height="1309" />

For most of the countries with a projected population decrease (including those not shown above) the decline began recently or has yet to begin.  For the 9 countries illustrated here, the average trend is positive up to roughly the year 2000.  Only one of them has seen its population decrease since 1970.  I've re-plotted this below along with every other country that falls under this category.

<img class=" size-full wp-image-63 aligncenter" src="https://galeascience.files.wordpress.com/2016/02/declining_pop_since_1970.png" alt="declining_pop_since_1970" width="1732" height="1305" />

These are predominantly European, as illustrated below.  As for the extremely low populous countries: Cook Islands is a cluster of tropical islands in between Australia and South America and Montserrat is a Central American island.

<img class=" size-full wp-image-207 aligncenter" src="https://galeascience.files.wordpress.com/2016/02/europe_map1.png" alt="europe_map" width="1058" height="608" />

Although large growth is expected in many parts of the world, the overall rate of increase is <a href="https://commons.wikimedia.org/wiki/File:World_population_growth_rate_1950%E2%80%932050.svg" target="_blank">steadily decreasing</a>.

Returning to the opening figure in this post, we can see that some of the countries expected to grow the most are also among the poorest.  By looking at the growth domestic product (GDP) for each country, we can mark them according to the health of their economy.  I "scraped" GDP data from a table on <a href="https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(PPP)_per_capita" target="_blank">this Wikipedia page</a> using the Pattern data-mining module for Python 2:

[code language="python"]
import requests
import pattern.web

url = 'https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(PPP)_per_capita'
website_html = requests.get(url).text

def get_html_tables(html):
    dom = web.Element(html)
#    tbls = dom('table') # all the tables
    tbls = dom.by_class('wikitable sortable')  # the tables we want
    return tbls

table = get_html_tables(website_html)[0] # [0] to reutrn the first one
[/code]

Then I converted the html to a dictionary:

[code language="python"]
def get_countries_GDP(table):
    result = {}
    rows = table('tr') # rows are identified by 'tr' tag
    rows = rows[1:] # ignore headers
    for row in rows:
        # get the content from each row
        country_name = row('td')[1]('a')[0].content
        GDP = row('td')[2].content.replace(',','')
        result[country_name] = int(GDP) # add to dictionary
    return result

GDP_dict = get_countries_GDP(table)
[/code]

Lastly I used Pandas to make a data frame, in this case we only have one column and each row corresponds to a different country.

[code language="python"]
import pandas as pd

dataframe_GDP = pd.DataFrame.from_dict(GDP_dict, orient='index')

# replace dataframe with a version sorted by country name
dataframe_GDP.sort_index(axis=0, inplace=True)

# label the column
dataframe_GDP.columns = ['GDP per capita']

# rename a row label
dataframe_GDP.rename(index={'Democratic Republic of the Congo':
                     'DR Congo'}, inplace=True)
[/code]

Combining this data with the population values, we can look for correlations. In the figures below, I focused on African countries.  The lines, which span many years, are marked by the countries GDP divided by the population size (i.e., the GDP per capita).

<img class="alignnone size-full wp-image-66" src="https://galeascience.files.wordpress.com/2016/02/largegdpafricas.png" alt="largeGDPafricas" width="1661" height="1314" /><img class="alignnone size-full wp-image-65" src="https://galeascience.files.wordpress.com/2016/02/smallgdpafricas.png" alt="smallGDPafricas" width="1622" height="1314" />

Note the difference in the color-bar and population scales for each figure.

I've also made a plot in this style that includes all countries.  Unfortunately most are marked in light orange or yellow because there is insufficient detail in the bottom half of the color-bar (i.e., when the GDP per capita is less than 60,000$, which is the case for most countries).  I labeled, and plotted with thicker lines, the countries that have the largest GDP per capita.  Due to the large variation in populations a logarithmic scale was used.

<img class="alignnone size-full wp-image-68" src="https://galeascience.files.wordpress.com/2016/02/popgrowthgdpall.png" alt="popgrowthGDPall" width="1705" height="1314" />

The code used to produce this figure is shown below.  I reference a Pandas DataFrame object called "dataframe" that contains all the population information, where the rows correspond to countries and columns correspond to years. First I import plotting tools from the matplotlib library and make a list of the countries to plot and a list of their GDP per captia:

[code language="python"]
import math as m
%matplotlib inline
import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import matplotlib.gridspec

# lists of all coutries that are in both databases and their GDP per capita as of 2014
all_countries = [country for country in dataframe.index if country in dataframe_GDP.index]
all_GDP = [dataframe_GDP.ix[country][0] for country in all_countries]

[/code]

Next I define the plotting function:

[code language="python"]
def plotpop_all_log(x1,x2,y1,y2,country_list,z,z1,z2,title,label):

    plt.figure(figsize=(14,10))

    # a colormap gradient
    my_cmap = mpl.colors.LinearSegmentedColormap.from_list(
                         'mycolors',['yellow','red'])
    CS3 = plt.cm.ScalarMappable(cmap=my_cmap,
                 norm=plt.Normalize(vmin=z1, vmax=z2))
    # set up an 'array for the scalar mappable',
    # required or else will get errors when it's used below
    CS3._A = []

    # create a box for the labels
    box = dict(boxstyle='square', facecolor='lightgrey',
               alpha=0.9)

    i = 0
    lastmark = 10.0
    lastfinal = 10.0
    labeled_countries = []
    labeled_colors = []
    for country in country_list:

        row = dataframe.ix[country]
        r = 1
        g = (z2-float(z[i]))/(z2-z1)
        b = 0
        plt.semilogy(row.index, row, label=row.name, color=(r,g,b))

        if label == True:
            # mark some countries to be labeled
# if it prints '&amp;amp' below this is a wordpress HTML issue
            if all_GDP[i]&gt;67000:
                labeled_countries.append(country)
                labeled_colors.append([r,g,b])
        i += 1

    if label == True:
        # manual shifts for the labels
        label_pads = [0, 0.05, 0.1, 0, -0.05, 1.3]
        yearmark = 2040
        for i, country in enumerate(labeled_countries):
            row = dataframe.ix[country]
            r,g,b = labeled_colors[i]
            # re-plot thicker lines for these
            plt.semilogy(row.index, row, label=row.name,
                         color=(r,g,b), linewidth=3)
            plt.text(row.index[-4], row[yearmark]+label_pads[i],
                     row.name, bbox=box, fontsize=12)
                  # (x-position, y-position, label, ...)

    plt.xlim(xmin=x1,xmax=x2)
    plt.ylim(ymin=y1,ymax=y2)
    plt.tick_params(axis='both', labelsize=14)
    # enlarge the y-axis ticks
    plt.tick_params(axis='y', length=20, width=1, which='major')
    plt.tick_params(axis='y', length=10, width=1, which='minor')

    plt.xlabel('Year', fontsize=15, labelpad=15)
    plt.ylabel('Population (millions)', fontsize=15, labelpad=15)
    plt.title(title, fontsize=20, y=1.03)

    cbar_ticks = range(z1, z2+(z2-z1)/5, (z2-z1)/5)
    cbar = plt.colorbar(CS3)
    cbar.set_label('GDP per capita', rotation=270, fontsize=15,
                   labelpad=30)
    cbar.set_ticks(cbar_ticks)
    cbar.ax.set_yticklabels([str(a) for a in cbar_ticks])
    cbar.ax.tick_params(labelsize=14)

[/code]

For the color-bar I used code from <a href="http://stackoverflow.com/questions/8342549/matplotlib-add-colorbar-to-a-sequence-of-line-plots" target="_blank">this Stack Overflow thread</a>.  A similar plotting function was used to make the African country figures seen above.  Lastly, I call the function and save the figure.

[code language="python"]
plotpop_all_log(1950, 2050, 0.01, 100, all_countries, all_GDP,
                    int(min(all_GDP)/100)*100-100, # minimum color-bar value
                    int(m.ceil(max(all_GDP)/10000)*10000)+10000, # maximum color-bar value
                    'Population growth compared to 2014 GDP per capita', True)

plt.savefig('popgrowthGDPall.png', bbox_inches='tight', dpi=144)
[/code]

Thanks for reading!  This post was inspired by <a href="https://github.com/cs109/content/tree/master/labs/lab2" target="_blank">Lab 2</a> of Harvard's data science course.  If you would like to discuss any of the plots or have any questions or corrections, please write a comment.  You are also welcome to email me at agalea91@gmail.com

&nbsp;